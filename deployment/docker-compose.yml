version: "3"
services:
  app:
    build:
      context:  ./
      dockerfile: deployment/dockerfiles/secmon-app.Dockerfile
    container_name: secmon-app
    restart: always
    ports:
      - 8080:80
    volumes:
      - .:/var/www/html/secmon
      - /var/log/secmon:/var/log/secmon
    links:
      - db
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=<password>
      - POSTGRES_USER=secmon
    depends_on:
      - db
    networks:
      - app-network

  aggregator:
    build:
      context:  ./
      dockerfile: deployment/dockerfiles/secmon-aggregator.Dockerfile
    container_name: secmon-aggregator
    restart: unless-stopped
    #command: ["sh", "-c", "./yii aggregator"]
    volumes:
      - .:/var/www/html/secmon
      - /var/log/secmon:/var/log/secmon
    depends_on:
      - app
    networks:
      - app-network

  normalizer:
    build:
      context:  ./
      dockerfile: deployment/dockerfiles/secmon-normalizer.Dockerfile
    container_name: secmon-normalizer
    restart: unless-stopped
    #command: ["sh", "-c", "sec --conf=/var/www/html/secmon/rules/active/normalization/*.rule --input=/var/log/secmon/__secOutput --bufsize=1 --detach && ./yii normalizer"]
    expose: 
      - 5557
    volumes:
      - .:/var/www/html/secmon
      - /var/log/secmon:/var/log/secmon
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: postgres
    container_name: secmon-db
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=<password>
      - POSTGRES_USER=secmon
    volumes:
      - db_data:/var/lib/pgsql/data/
    networks:
      - app-network
    
volumes:
  db_data:

#Docker Networks
networks:
  app-network:
    driver: bridge